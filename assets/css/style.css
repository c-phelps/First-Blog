/* define the colors used in the light/dark modes */
:root {
  --darkColor: rgb(34, 34, 34);
  --lightColor: rgb(240, 240, 240);
}
/* define styling for h1 and 2 */
h1 {
  font-size: 180%;
  text-align: center;
  font-weight: 800;
}
h2 {
  font-size: 150%;
  text-align: center;
  font-weight: 800;
}
/* apply the styling to our light and dark modes */
body.light {
  background-color: var(--lightColor);
  color: var(--darkColor);
}
body.dark {
  background-color: var(--darkColor);
  color: var(--lightColor);
}

/* comment this section on/off to see the layout wirefram
section {
  border: 1px solid;
} */

/* header section styling */
#pageHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 100px;
}
/* back button styling  */
#btnBack {
  margin-left: auto;
  margin-right: 30px;
  flex: 0 0 auto;
  width: auto;
  min-width: auto;
}
#headerImg {
  cursor: pointer;
  flex: 0 0 auto;
}
/* header for main page with margin-left to avoid pushing the button on page 2 */
#headerImg1 {
  cursor: pointer;
  margin-left: auto;
  flex: 0 0 auto;
}
/* minor margin for the header title of the blog page */
#headerTitle {
  margin-left: 2%;
}
/* styling the spacer to be dynamic in height to 2% of the current vh */
.spacerStyling {
  width: 100%;
  margin-top: 0.25%;
  height: calc(100vh * 0.02);
  border-width: 3px;
  border-bottom: solid;
  border-top: solid;
}
/* setting the main content styling */
#mainContent {
  display: flex;
  width: 100%;
  height: 100vh;
}
/* setting the blog content styling */
#blogContent {
  display: flex;
  width: 100%;
  min-height: 100vh;
  flex-wrap: wrap;
}
/* page footer styling for the section h4 and links */
#pageFooter {
  display: flex;
  flex-wrap: wrap;
  height: 100px;
  order: 1;
}
#pageFooter h4 {
  display: flex;
  justify-content: center;
  padding-top: 5px;
  width: 100%;
}
#footerLinks {
  margin-left: 15px;
}
#footerLinks ul li {
  padding-top: 3px;
}
#footerLinks ul li a {
  color: inherit;
  text-decoration: none;
}
/* the dynamic section class that is passed to sections created in JS and applied to the blog page */
.dynamicSection {
  position: relative;
  width: 100%;
  max-width: 100%;
  border: 1px solid black;
  margin: 1%;
  padding: 1%;
  overflow-wrap: break-word;
  word-break: break-all;
}
/* dynamic title class passed to the title section of the blog post */
.dynamicTitle {
  width: 100%;
  border-bottom: solid;
  margin-bottom: 5px;
}
/* italicize the content */
.dynamicContent {
  font-style: italic;
}
/* force the footer to the bottom of the section */
.dynamicFooter {
  position: absolute;
  bottom: 0;
  margin-bottom: 5px;
}
/* set the left section for the main page */
#leftSection {
  margin-right: 0.25%;
  border-width: 3px;
  border-right: solid;
  width: 50%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}
/* blog img styling */
#blogImg {
  position: relative;
  max-width: 100%;
  max-height: 100%;
  height: auto;
}
/* apply styling to the right section */
#rightSection {
  box-sizing: border-box;
  margin-left: 0.25%;
  border-width: 3px;
  border-left: solid;
  width: 50%;
  height: 100%;
  padding: 10% 2% 0 2%;
}
/* have our input and text area sections fill the width of the screen */
input,
textarea {
  box-sizing: border-box;
  width: 100%;
}

label {
  font-weight: 550;
}
/* dynamic classes for our light and dark stylings of our button */
input[name="btn"].dark {
  background-color: var(--lightColor);
  color: var(--darkColor);
  font-weight: 550;
  padding: 10px 20px;
  cursor: pointer;
}

input[name="btn"].light {
  background-color: var(--darkColor);
  color: var(--lightColor);
  font-weight: 550;
  padding: 10px 20px;
  cursor: pointer;
}
/* when the screen is smaller, force the font to fit within the sections  */
@media only screen and (max-width: 425px) {
  article {
    font-size: 80%;
  }
}
